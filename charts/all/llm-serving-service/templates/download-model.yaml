apiVersion: batch/v1
kind: Job
metadata:
  name: download-model
spec:
  selector: {}
  template:
    spec:
      containers:
        - args:
            - -ec
            - |-
              pip install huggingface_hub;
              export HF_HOME=/tmp/cache/
              cat << 'EOF' | python3
              from huggingface_hub import snapshot_download
              from pathlib import Path
              from huggingface_hub import login
              import subprocess, os

              # Get the environment variable 'hftoken'
              hf_token = os.getenv('hftoken')
              # Get model id
              modelid = os.getenv('modelId')
              model_id = modelid.split('/')[-1]

              def run_command(command):
                  """Run a shell command and check for errors."""
                  result = subprocess.run(command, shell=True, check=True, text=True, capture_output=True)
                  print(result.stdout)
                  if result.stderr:
                      print(result.stderr)

              if hf_token is not None and hf_token.strip() != "None":
                print("hftoken is set.")
                login(token=hf_token)
              mistral_models_path = "/cache/models"
              snapshot_download(repo_id=modelid, local_dir=mistral_models_path)
              EOF
          command:
            - /bin/bash
          envFrom:
            - secretRef:
                name: huggingface-secret
          image: registry.access.redhat.com/ubi9/python-39
          imagePullPolicy: IfNotPresent
          name: download-model
          volumeMounts:
            - mountPath: /cache/models
              name: models
      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: model-pvc
      restartPolicy: OnFailure
