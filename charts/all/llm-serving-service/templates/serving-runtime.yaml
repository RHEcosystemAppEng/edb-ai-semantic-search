apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    opendatahub.io/accelerator-name: nvidia-gpu
    opendatahub.io/apiProtocol: REST
    opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
    openshift.io/display-name: mistral-7b-instruct
  name: mistral-7b-instruct
  namespace: rag-llm
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: '8080'
  containers:
    - args:
        - '--port=8080'
        - '--model=/cache/models'
        - '--distributed-executor-backend=mp'
        - '--served-model-name=mistral-7b-instruct'
        - '--max-model-len=4096'
        - '--dtype=half'
        - '--gpu-memory-utilization'
        - '0.98'
        - '--enforce-eager'
      command:
        - python
        - '-m'
        - vllm.entrypoints.openai.api_server
      env:
        - name: HF_HOME
          value: /cache
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              key: hftoken
              name: huggingface-secret
        - name: MODEL_ID
          valueFrom:
            secretKeyRef:
              key: modelId
              name: huggingface-secret
        - name: HF_HUB_OFFLINE
          value: '0'
      image: 'quay.io/modh/vllm@sha256:b51fde66f162f1a78e8c027320dddf214732d5345953b1599a84fe0f0168c619'
      name: kserve-container
      ports:
        - containerPort: 8080
          protocol: TCP
      volumeMounts:
        - mountPath: /dev/shm
          name: shm
        - mountPath: /cache/models
          name: models
  multiModel: false
  supportedModelFormats:
    - autoSelect: true
      name: vLLM
  volumes:
    - emptyDir:
        medium: Memory
        sizeLimit: 2Gi
      name: shm
    - name: models
      persistentVolumeClaim:
        claimName: model-pvc
